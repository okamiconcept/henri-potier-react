{"version":3,"sources":["OrderContext.tsx","ProductApi.ts","Header.tsx","ProductContext.tsx","views/Cart.tsx","views/Home.tsx","Book.tsx","BookList.tsx","views/Products.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Action","apiURL","fetchProducts","a","fetch","response","json","books","fetchCommercialOffers","productsIds","route","join","offerResponse","offers","initialState","total","reduction","count","items","OrderStateContext","createContext","undefined","OrderDispatchContext","calculateReductionForOffer","state","offer","type","value","Math","floor","sliceValue","calculateBestReduction","map","amount","sort","b","calculateOrder","reduce","item","quantity","product","price","saveOrder","localStorage","setItem","JSON","stringify","orderReducer","action","INIT_ORDER","payload","ADD_TO_ORDER","productInOrder","find","orderItem","isbn","push","id","DELETE_ORDER_ITEM","filter","CHANGE_QUANTITY_ORDER_ITEM","orderItemInOrder","COMMERCIAL_OFFERS_RESPONSE","OrderProvider","children","useReducer","dispatch","useEffect","orderStorage","getItem","orderState","parse","length","commercialOffers","fetchData","Provider","useOrderState","context","useContext","Error","useOrderDispatch","useOrder","Header","stateOrder","className","role","aria-label","to","aria-expanded","data-target","aria-hidden","data-badge","Cart","dispatchOrder","title","toFixed","key","onClick","Home","Book","src","cover","alt","synopsis","paragraph","index","loading","products","ProductStateContext","ProductDispatchContext","productReducer","GET_PRODUCTS","PRODUCTS_RESPONSE","ProductProvider","useProductState","useProductDispatch","BookList","stateProducts","useState","search","setSearch","filteredProducts","setFilteredProducts","includes","placeholder","onChange","e","target","Products","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e086b155.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useReducer } from \"react\";\nimport { fetchCommercialOffers } from \"./ProductApi\";\nimport { CommercialOffer, OrderItem, Product } from \"./ProductModel\";\n\ntype ActionDispatch =\n  | {\n      type: Action.INIT_ORDER;\n      payload: State;\n    }\n  | {\n      type: Action.ADD_TO_ORDER;\n      payload: Product;\n    }\n  | {\n      type: Action.DELETE_ORDER_ITEM;\n      payload: OrderItem;\n    }\n  | {\n      type: Action.CHANGE_QUANTITY_ORDER_ITEM;\n      payload: { item: OrderItem; quantity: number };\n    }\n  | {\n      type: Action.COMMERCIAL_OFFERS_RESPONSE;\n      payload: CommercialOffer[];\n    };\n\nenum Action {\n  INIT_ORDER = \"INIT_ORDER\",\n  ADD_TO_ORDER = \"ADD_TO_ORDER\",\n  DELETE_ORDER_ITEM = \"DELETE_ORDER_ITEM\",\n  CHANGE_QUANTITY_ORDER_ITEM = \"CHANGE_QUANTITY_ORDER_ITEM\",\n  COMMERCIAL_OFFERS_RESPONSE = \"COMMERCIAL_OFFERS_RESPONSE\"\n}\nexport type Dispatch = (action: ActionDispatch) => void;\ntype State = {\n  total: number;\n  count: number;\n  reduction: { offer: CommercialOffer; amount: number } | null;\n  items: OrderItem[];\n  offers: CommercialOffer[];\n};\n\nconst initialState: State = {\n  total: 0,\n  reduction: null,\n  count: 0,\n  items: [],\n  offers: []\n};\n\ntype OrderProviderProps = { children: React.ReactNode };\nconst OrderStateContext = createContext<State | undefined>(undefined);\nconst OrderDispatchContext = createContext<Dispatch | undefined>(undefined);\n\nfunction calculateReductionForOffer(state: State, offer: CommercialOffer) {\n  switch (offer.type) {\n    case \"percentage\": {\n      return state.total * (offer.value / 100);\n    }\n    case \"minus\": {\n      return offer.value;\n    }\n    case \"slice\": {\n      const nbSlice = Math.floor(state.total / offer.sliceValue);\n      return nbSlice * offer.value;\n    }\n  }\n}\n\nfunction calculateBestReduction(state: State) {\n  return state.offers\n    .map(offer => ({ offer, amount: calculateReductionForOffer(state, offer) }))\n    .sort((a, b) => (a.amount < b.amount ? 1 : -1))[0];\n}\n\nfunction calculateOrder(state: State) {\n  return {\n    ...state,\n    count: state.items.reduce((value, item) => value + item.quantity, 0),\n    total: state.items.reduce(\n      (value, item) => value + item.quantity * item.product.price,\n      0\n    ),\n    reduction: calculateBestReduction(state)\n  };\n}\n\nfunction saveOrder(state: State) {\n  localStorage.setItem(\"order\", JSON.stringify(state));\n}\n\nfunction orderReducer(state: State, action: ActionDispatch): State {\n  switch (action.type) {\n    case Action.INIT_ORDER: {\n      state = action.payload;\n\n      state = calculateOrder(state);\n      saveOrder(state);\n\n      return {\n        ...state\n      };\n    }\n\n    case Action.ADD_TO_ORDER: {\n      const productInOrder = state.items.find(\n        orderItem => orderItem.product.isbn === action.payload.isbn\n      );\n      if (productInOrder) {\n        productInOrder.quantity++;\n      } else {\n        state.items.push({\n          id: action.payload.isbn,\n          product: action.payload,\n          quantity: 1\n        });\n      }\n\n      state = calculateOrder(state);\n      saveOrder(state);\n\n      return {\n        ...state\n      };\n    }\n\n    case Action.DELETE_ORDER_ITEM: {\n      state.items = state.items.filter(\n        orderItem => orderItem.id !== action.payload.id\n      );\n\n      state = calculateOrder(state);\n      saveOrder(state);\n\n      return {\n        ...state\n      };\n    }\n\n    case Action.CHANGE_QUANTITY_ORDER_ITEM: {\n      const orderItemInOrder = state.items.find(\n        orderItem => orderItem.id === action.payload.item.id\n      );\n\n      if (orderItemInOrder) {\n        orderItemInOrder.quantity += action.payload.quantity;\n        if (orderItemInOrder.quantity <= 0) {\n          orderReducer(state, {\n            type: Action.DELETE_ORDER_ITEM,\n            payload: orderItemInOrder\n          });\n        }\n      }\n\n      state = calculateOrder(state);\n      saveOrder(state);\n\n      return {\n        ...state\n      };\n    }\n\n    case Action.COMMERCIAL_OFFERS_RESPONSE: {\n      state.offers = action.payload;\n\n      state = calculateOrder(state);\n      saveOrder(state);\n\n      return {\n        ...state\n      };\n    }\n  }\n}\n\nfunction OrderProvider({ children }: OrderProviderProps) {\n  const [state, dispatch] = useReducer(orderReducer, initialState);\n\n  useEffect(() => {\n    const orderStorage = localStorage.getItem(\"order\");\n\n    if (orderStorage) {\n      const orderState: State = JSON.parse(orderStorage);\n\n      dispatch({ type: Action.INIT_ORDER, payload: orderState });\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (state.items.length) {\n        const commercialOffers = await fetchCommercialOffers(\n          state.items.map(orderItem => orderItem.product.isbn)\n        );\n\n        dispatch({\n          type: Action.COMMERCIAL_OFFERS_RESPONSE,\n          payload: commercialOffers\n        });\n      }\n    };\n\n    fetchData();\n  }, [state.count, state.items]);\n\n  return (\n    <OrderStateContext.Provider value={state}>\n      <OrderDispatchContext.Provider value={dispatch}>\n        {children}\n      </OrderDispatchContext.Provider>\n    </OrderStateContext.Provider>\n  );\n}\n\nfunction useOrderState() {\n  const context = useContext(OrderStateContext);\n  if (context === undefined) {\n    throw new Error(\"useOrderState must be used within a OrderProvider\");\n  }\n  return context;\n}\n\nfunction useOrderDispatch() {\n  const context = useContext(OrderDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useOrderDispatch must be used within a OrderProvider\");\n  }\n  return context;\n}\n\nfunction useOrder(): [State, Dispatch] {\n  return [useOrderState(), useOrderDispatch()];\n}\n\nexport { Action, OrderProvider, useOrder };\n","import { CommercialOffersResponse, Product } from \"./ProductModel\";\n\nconst apiURL = \"http://henri-potier.xebia.fr\";\n\nconst fetchProducts = async () => {\n  const route = \"/books\";\n  const response = await fetch(apiURL + route);\n  const books: Product[] = await response.json();\n\n  return books;\n};\n\nconst fetchCommercialOffers = async (productsIds: string[]) => {\n  const route = `/books/${productsIds.join(\",\")}/commercialOffers`;\n  const response = await fetch(apiURL + route);\n  const offerResponse: CommercialOffersResponse = await response.json();\n\n  return offerResponse.offers;\n};\n\nexport { fetchProducts, fetchCommercialOffers };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useOrder } from \"./OrderContext\";\n\nconst Header: React.FC = () => {\n  const [stateOrder] = useOrder();\n\n  return (\n    <header>\n      <nav\n        className=\"navbar is-primary\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"navbar-brand\">\n          <Link className=\"navbar-item\" to=\"/\">\n            HENRI POTTIER\n          </Link>\n\n          <a\n            role=\"button\"\n            className=\"navbar-burger burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarBasicExample\"\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            <Link className=\"navbar-item\" to=\"/products\">\n              Products\n            </Link>\n          </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                <Link\n                  className=\"button is-info badge has-badge-rounded has-badge-danger\"\n                  data-badge={stateOrder.count}\n                  to=\"/cart\"\n                >\n                  <span className=\"icon\">\n                    <i className=\"fas fa-shopping-cart\"></i>\n                  </span>\n                  <strong>View Order</strong>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { createContext, useContext, useEffect, useReducer } from \"react\";\nimport { fetchProducts } from \"./ProductApi\";\nimport { Product } from \"./ProductModel\";\n\ntype ActionDispatch =\n  | {\n      type: Action.GET_PRODUCTS;\n    }\n  | {\n      type: Action.PRODUCTS_RESPONSE;\n      payload: Product[];\n    };\n\nenum Action {\n  GET_PRODUCTS = \"GET_PRODUCTS\",\n  PRODUCTS_RESPONSE = \"PRODUCTS_RESPONSE\"\n}\nexport type Dispatch = (action: ActionDispatch) => void;\ntype State = {\n  count: number;\n  loading: boolean;\n  products: Product[];\n};\n\nconst initialState: State = {\n  count: 0,\n  loading: false,\n  products: []\n};\n\ntype ProductProviderProps = { children: React.ReactNode };\nconst ProductStateContext = createContext<State | undefined>(undefined);\nconst ProductDispatchContext = createContext<Dispatch | undefined>(undefined);\n\nfunction productReducer(state: State, action: ActionDispatch): State {\n  switch (action.type) {\n    case Action.GET_PRODUCTS: {\n      return { ...state, loading: true };\n    }\n    case Action.PRODUCTS_RESPONSE: {\n      return {\n        ...state,\n        products: action.payload,\n        loading: false\n      };\n    }\n  }\n}\n\nfunction ProductProvider({ children }: ProductProviderProps) {\n  const [state, dispatch] = useReducer(productReducer, initialState);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const products = await fetchProducts();\n\n      dispatch({\n        type: Action.PRODUCTS_RESPONSE,\n        payload: products\n      });\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <ProductStateContext.Provider value={state}>\n      <ProductDispatchContext.Provider value={dispatch}>\n        {children}\n      </ProductDispatchContext.Provider>\n    </ProductStateContext.Provider>\n  );\n}\n\nfunction useProductState() {\n  const context = useContext(ProductStateContext);\n  if (context === undefined) {\n    throw new Error(\"useProductState must be used within a ProductProvider\");\n  }\n  return context;\n}\n\nfunction useProductDispatch() {\n  const context = useContext(ProductDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useProductDispatch must be used within a ProductProvider\");\n  }\n  return context;\n}\n\nfunction useProduct(): [State, Dispatch] {\n  return [useProductState(), useProductDispatch()];\n}\n\nexport { Action, ProductProvider, useProduct };\n","import React from \"react\";\nimport { Action, useOrder } from \"../OrderContext\";\n\nconst Cart: React.FC = () => {\n  const [stateOrder, dispatchOrder] = useOrder();\n\n  return (\n    <section className=\"section\">\n      <h1 className=\"title is-2\">Your cart</h1>\n\n      {stateOrder.count ? (\n        <table className=\"table is-hoverable is-fullwidth\">\n          <thead>\n            <tr>\n              <th>\n                <abbr title=\"Product\">Product</abbr>\n              </th>\n              <th className=\"has-text-centered\">\n                <abbr title=\"Quantity\">Quantity</abbr>\n              </th>\n              <th className=\"has-text-right\">\n                <abbr title=\"Price\">Unit Price</abbr>\n              </th>\n              <th className=\"has-text-right\">\n                <abbr title=\"Total Price\">Total Price</abbr>\n              </th>\n              <th></th>\n            </tr>\n          </thead>\n          <tfoot>\n            <tr>\n              <th></th>\n              <th></th>\n              <th className=\"has-text-right\">Total before reduction</th>\n              <th className=\"has-text-right\">\n                {stateOrder.total.toFixed(2)} €\n              </th>\n              <th></th>\n            </tr>\n            <tr>\n              <th></th>\n              <th></th>\n              <th className=\"has-text-right\">\n                Reduction\n                {stateOrder.reduction\n                  ? ` (${stateOrder.reduction.offer.type})`\n                  : \"\"}\n              </th>\n              <th className=\"has-text-right\">\n                {(stateOrder.reduction\n                  ? stateOrder.reduction.amount\n                  : 0\n                ).toFixed(2)}{\" \"}\n                €\n              </th>\n              <th></th>\n            </tr>\n            <tr>\n              <th></th>\n              <th></th>\n              <th className=\"has-text-right\">Total</th>\n              <th className=\"has-text-right\">\n                {(\n                  stateOrder.total -\n                  (stateOrder.reduction ? stateOrder.reduction.amount : 0)\n                ).toFixed(2)}{\" \"}\n                €\n              </th>\n              <th></th>\n            </tr>\n          </tfoot>\n          <tbody>\n            {stateOrder.items.map(item => (\n              <tr key={item.id}>\n                <th>{item.product.title}</th>\n                <td>\n                  <div className=\"buttons has-addons is-centered\">\n                    <button\n                      className=\"button\"\n                      onClick={() => {\n                        dispatchOrder({\n                          type: Action.CHANGE_QUANTITY_ORDER_ITEM,\n                          payload: { item, quantity: -1 }\n                        });\n                      }}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className=\"fas fa-minus-square\"></i>\n                      </span>\n                    </button>\n                    <span className=\"button\">{item.quantity}</span>\n                    <button\n                      className=\"button\"\n                      onClick={() => {\n                        dispatchOrder({\n                          type: Action.CHANGE_QUANTITY_ORDER_ITEM,\n                          payload: { item, quantity: 1 }\n                        });\n                      }}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className=\"fas fa-plus-square\"></i>\n                      </span>\n                    </button>\n                  </div>\n                </td>\n                <td className=\"has-text-right\">\n                  {item.product.price.toFixed(2)} €\n                </td>\n                <td className=\"has-text-right\">\n                  {(item.product.price * item.quantity).toFixed(2)} €\n                </td>\n                <td className=\"has-text-right\">\n                  <button\n                    className=\"button is-danger\"\n                    onClick={() => {\n                      dispatchOrder({\n                        type: Action.DELETE_ORDER_ITEM,\n                        payload: item\n                      });\n                    }}\n                  >\n                    <span className=\"icon is-small\">\n                      <i className=\"fas fa-trash-alt\"></i>\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <div>Your cart is empty.</div>\n      )}\n    </section>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\n\nconst Home: React.FC = () => {\n  return <div>Welcome to Henri Pottier e-shop!</div>;\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Action, useOrder } from \"./OrderContext\";\nimport { Product } from \"./ProductModel\";\n\ninterface BookProps {\n  product: Product;\n}\n\nconst Book: React.FC<BookProps> = ({ product }) => {\n  const [stateOrder, dispatchOrder] = useOrder();\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-3by4\">\n          <img src={product.cover} alt={product.title} />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{product.title}</p>\n            <p className=\"subtitle is-6\">\n              {product.price} €\n              <button\n                className=\"button is-info is-pulled-right\"\n                onClick={() => {\n                  dispatchOrder({\n                    type: Action.ADD_TO_ORDER,\n                    payload: product\n                  });\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"fas fa-cart-arrow-down\"></i>\n                </span>\n                <span>Add to cart</span>\n              </button>\n            </p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {product.synopsis.map((paragraph, index) => (\n            <p key={index}>{paragraph}</p>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React, { useEffect, useState } from \"react\";\nimport Book from \"./Book\";\nimport { useProduct } from \"./ProductContext\";\n\nconst BookList: React.FC = () => {\n  const [stateProducts] = useProduct();\n\n  const [search, setSearch] = useState(\"\");\n  const [filteredProducts, setFilteredProducts] = useState(\n    stateProducts.products\n  );\n\n  useEffect(() => {\n    setFilteredProducts(\n      stateProducts.products.filter(product => product.title.includes(search))\n    );\n  }, [search, stateProducts.products]);\n\n  return (\n    <section className=\"section\">\n      <div className=\"columns\">\n        <div className=\"column\">\n          <h1 className=\"title is-2\">Products</h1>\n        </div>\n\n        <form className=\"column\">\n          <div className=\"field\">\n            <p className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Search\"\n                onChange={e => {\n                  setSearch(e.target.value);\n                }}\n                value={search}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-search\"></i>\n              </span>\n            </p>\n          </div>\n        </form>\n      </div>\n\n      <div className=\"columns is-multiline\">\n        {filteredProducts.map(product => (\n          <div className=\"column is-one-quarter\" key={product.isbn}>\n            <Book product={product}></Book>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default BookList;\n","import React from \"react\";\nimport BookList from \"../BookList\";\nimport { ProductProvider } from \"../ProductContext\";\n\nconst Products: React.FC = () => {\n  return (\n    <ProductProvider>\n      <BookList></BookList>\n    </ProductProvider>\n  );\n};\n\nexport default Products;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport { OrderProvider } from \"./OrderContext\";\nimport \"./styles/App.scss\";\nimport Cart from \"./views/Cart\";\nimport Home from \"./views/Home\";\nimport Products from \"./views/Products\";\n\nconst App: React.FC = () => {\n  return (\n    <OrderProvider>\n      <Router>\n        <div className=\"container\">\n          <Header></Header>\n\n          <Switch>\n            <Route path=\"/products\">\n              <Products />\n            </Route>\n            <Route path=\"/cart\">\n              <Cart />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </OrderProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}